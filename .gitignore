# ==============================================================================
# .gitignore para Proyecto EduRAG Completo
# Incluye: Backend (Python/FastAPI), Frontend (Vue/Node), MCP Server, Documentación
# ==============================================================================

# ==============================================================================
# PYTHON / BACKEND (FastAPI)
# ==============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# pdm
.pdm.toml

# PEP 582
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ==============================================================================
# NODE / FRONTEND (Vue/Vite)
# ==============================================================================

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Dependencies
node_modules/
jspm_packages/

# Testing
coverage/

# Production builds
dist/
dist-ssr/
build/

# Editor directories and files
.vscode/*
!.vscode/extensions.json
!.vscode/settings.json
.idea/
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Vite
.vite/
*.local

# Vue
.nuxt/
.output/
.cache/

# TypeScript
*.tsbuildinfo

# Package manager files
package-lock.json
yarn.lock
pnpm-lock.yaml

# ==============================================================================
# MCP SERVER (Node/TypeScript)
# ==============================================================================

# Build outputs
mcp-server/build/
mcp-server/dist/
mcp-server/lib/
mcp-server/out/

# Node modules específicos de mcp-server
mcp-server/node_modules/

# TypeScript
mcp-server/*.tsbuildinfo

# ==============================================================================
# VARIABLES DE ENTORNO / SECRETS
# ==============================================================================

# Environment variables (CRÍTICO - NO SUBIR A GIT)
.env
.env.local
.env.development
.env.development.local
.env.test
.env.test.local
.env.production
.env.production.local

# Archivos de configuración con secrets
backend/.env
backend/config.py
backend/secrets.json
frontend/.env
frontend/.env.local
edrag/.env
mcp-server/.env

# Claves API (por si acaso)
*.key
*.pem
*.p12
*.pfx
secrets/
credentials/

# ==============================================================================
# BASES DE DATOS LOCALES
# ==============================================================================

# SQLite (si se usa para desarrollo)
*.db
*.sqlite
*.sqlite3

# PostgreSQL dumps
*.sql
*.dump

# ==============================================================================
# SISTEMA OPERATIVO
# ==============================================================================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ==============================================================================
# IDEs / EDITORES
# ==============================================================================

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets
.history/
*.vsix

# JetBrains IDEs (PyCharm, WebStorm, IntelliJ)
.idea/
*.iws
*.iml
*.ipr
out/
.idea_modules/

# Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project

# Vim
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]
Session.vim
Sessionx.vim
.netrwhist
tags
[._]*.un~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ==============================================================================
# ARCHIVOS TEMPORALES / CACHE
# ==============================================================================

# Archivos temporales generales
*.tmp
*.temp
*.swp
*.swo
*.bak
*.backup
*.orig
*.rej
*~

# Cache de varios sistemas
.cache/
.parcel-cache/
.npm/
.eslintcache
.stylelintcache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# ==============================================================================
# ARCHIVOS GRANDES / BINARIOS (que no deben estar en Git)
# ==============================================================================

# PDFs de prueba (si son muchos o muy grandes)
# backend/test_pdfs/
# *.pdf

# Videos, imágenes grandes
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.mkv

# Archivos comprimidos grandes
*.zip
*.tar
*.tar.gz
*.rar
*.7z

# ==============================================================================
# DEPLOY / PRODUCCIÓN
# ==============================================================================

# Archivos de deployment
.vercel/
.netlify/
.render/
.railway/
.amplify/

# Build artifacts
*.pyc
*.pyo
*.pyd
.Python

# ==============================================================================
# TESTING
# ==============================================================================

# Test outputs
test-results/
playwright-report/
test-output/

# ==============================================================================
# DOCUMENTACIÓN (OPCIONAL - descomentar si no quieres subir generados)
# ==============================================================================

# Documentación auto-generada (si usas Sphinx, MkDocs, etc.)
# docs/_build/
# docs/.vitepress/dist/
# docs/.vuepress/dist/

# ==============================================================================
# PROYECTO ESPECÍFICO - EduRAG
# ==============================================================================

# PDFs de prueba (descomentar si no quieres subirlos)
# backend/test_materials/
# backend/uploads/

# Logs del sistema
backend/logs/
frontend/logs/
edrag/logs/

# Data temporal
backend/temp/
frontend/temp/

# ==============================================================================
# NOTAS IMPORTANTES
# ==============================================================================

# IMPORTANTE: Asegúrate de que .env NUNCA se suba a Git
# Contiene claves API sensibles (OpenAI, Supabase)

# Para desarrollo local, crea un archivo .env.example con variables vacías:
# SUPABASE_URL=your_url_here
# SUPABASE_KEY=your_key_here
# OPENAI_API_KEY=your_key_here
